CONSTANT 	LED1_PORT, 00
CONSTANT 	LED2_PORT, 01
CONSTANT 	HEX1_PORT, 02
CONSTANT 	HEX2_PORT, 03
CONSTANT 	HEX3_PORT, 04
CONSTANT 	HEX4_PORT, 05
CONSTANT 	RGB1_PORT, 06
CONSTANT 	RGB2_PORT, 07
CONSTANT 	UART_TX_PORT, 08
CONSTANT 	UART_RESET_PORT, 09

CONSTANT 	SW1_PORT, 00
CONSTANT 	SW2_PORT, 01
CONSTANT 	BTN_PORT, 02
CONSTANT 	UART_STATUS_PORT, 03
CONSTANT 	UART_RX_PORT, 04

CONSTANT U_TX_D, 01; 00000001 Tx data_present - bit0
CONSTANT U_TX_H, 02; 00000010 Tx half_full    - bit1
CONSTANT U_TX_F, 04; 00000100 Tx full         - bit2
CONSTANT U_RX_D, 08; 00001000 Rx data_present - bit3
CONSTANT U_RX_H, 10; 00010000 Rx half_full    - bit4
CONSTANT U_RX_F, 20; 00100000 Rx full         - bit5

					ADDRESS	000
	
;prvi zadatak
;START: 	INPUT s0, SW2_PORT
;		LOAD s1, 00
;		LOAD s2, 08
;PETLJA: RL s0
;		CALL C, BROJAC
;		SUB s2, 01
;		JUMP NZ, PETLJA
;		OUTPUT 	s0, LED2_PORT
;		OUTPUT 	s1, HEX4_PORT
;		JUMP START
;BROJAC: ADD s1, 01
;		RETURN

;drugi zadatak
;START: 	INPUT s0, SW2_PORT
;		RR s0
;		JUMP C, NEPAR
;		LOAD s1, 00
;ISPIS:	OUTPUT s1, LED2_PORT
;		JUMP START
;NEPAR: 	LOAD s1, FF
;		JUMP ISPIS

;treci zadatak
;START:  LOAD s0, 08
;		INPUT s1, SW2_PORT
;PETLJA: RL s1
;		SRA s2
;		SUB s0, 01
;		JUMP NZ, PETLJA
;		OUTPUT s2, LED2_PORT
;		JUMP START

;cetvrti zadatak

;		ENABLE INTERRUPT
;START:	JUMP START
;ISR: 	INPUT s0, SW2_PORT 
;		OUTPUT s0, LED2_PORT 
;		RETURNI ENABLE
;		ADDRESS 7FF
;		JUMP ISR

;peti zadatak

;		ENABLE INTERRUPT
;		LOAD s0, 01
;		LOAD s1, 00 ; smjer
;START: 	OUTPUT s0, LED2_PORT
;		CALL DELAY500
;		COMPARE s1, 00 ; smjer
;		JUMP Z, SMJER
;		RL s0
;		JUMP START
;SMJER: 	RR s0
;		JUMP START
;DELAY500: LOAD sA, 00
;PETLJA1: LOAD sB, 00
;PETLJA2: LOAD sC, BE
;PETLJA3: SUB sC, 01
;		JUMP NZ, PETLJA3
;		SUB sB, 01
;		JUMP NZ, PETLJA2
;		SUB sA, 01
;		JUMP NZ, PETLJA1
;		RETURN
; ISR: XOR s1, 01
; ; CALL DELAY500 ; debounce
		; RETURNI ENABLE
		; ADDRESS 7FF
		; JUMP ISR



;sesti zadatak

	
		; ENABLE INTERRUPT
		; LOAD s0, 00 ; addr. STORE
; START: 	INPUT s2, BTN_PORT
		; COMPARE s2, 00
		; JUMP Z, START
		; CALL DELAY500
		; INPUT s3, SW2_PORT
		; STORE s3, ( s0 )
		; ADD s0, 01
		; COMPARE s0, 64'd
		; JUMP NZ, START
		; LOAD s0, 00
		; JUMP START
; ISR:	LOAD s1, 00 ; addr. FETCH
		; LOAD s3, 64'd
		; PETLJA: FETCH s4, ( s1 )
		; ADD s1, 01
		; OUTPUT s4, HEX4_PORT
		; CALL DELAY500
		; SUB s3, 01
		; JUMP NZ, PETLJA
		; RETURNI ENABLE
				
; DELAY500: LOAD sA, 00
; PETLJA1: LOAD sB, 00
; PETLJA2: LOAD sC, BE
; PETLJA3: SUB sC, 01
		; JUMP NZ, PETLJA3
		; SUB sB, 01
		; JUMP NZ, PETLJA2
		; SUB sA, 01
		; JUMP NZ, PETLJA1
		; RETURN
		; ADDRESS 7FF
		; JUMP ISR
	

;sedmi zadatak

		ENABLE INTERRUPT
		LOAD s0, 00 ; addr. STORE
START: 	INPUT s2, BTN_PORT
		COMPARE s2, 00
		JUMP Z, START
		CALL DELAY500
		INPUT s3, SW2_PORT
		STORE s3, ( s0 )
		ADD s0, 01
		COMPARE s0, 64'd
		JUMP NZ, START
		LOAD s0, 00
		JUMP START
ISR: 	LOAD s1, 00 ; addr. FETCH
		LOAD sF, 00 ; suma
PETLJA: FETCH s4, ( s1 )
		ADD s1, 01
		ADD sF, s4 ; suma
		COMPARE s1, 04
		JUMP NZ, PETLJA
		SR0 sF
		SR0 sF
		OUTPUT sF, HEX4_PORT
		RETURNI ENABLE
DELAY500: LOAD sA, 00
PETLJA1: LOAD sB, 00
PETLJA2: LOAD sC, BE 
PETLJA3: SUB sC, 01
		JUMP NZ, PETLJA3
		SUB sB, 01
		JUMP NZ, PETLJA2
		SUB sA, 01
		JUMP NZ, PETLJA1
		RETURN
		ADDRESS 7FF
		JUMP ISR
